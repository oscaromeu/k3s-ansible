
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.17.2
    control-plane: controller
  name: helm-controller
  namespace: flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: helm-controller
    spec:
      containers:
      - args:
        - "--events-addr=http://notification-controller/"
        - "--watch-all-namespaces=true"
        - "--log-level=debug"
        - "--log-json"
        - "--enable-leader-election"
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/fluxcd/helm-controller-arm64:v0.4.4
        imagePullPolicy: IfNotPresent
          #livenessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: healthz
          #  initialDelaySeconds: 10
          #  periodSeconds: 3
          #  timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /healthz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        name: manager
        ports:
        - containerPort: 8080
          name: http-prom
            #    - containerPort: 9440
            #      name: healthz
            #      protocol: TCP
            #    readinessProbe:
            #      httpGet:
            #        path: /readyz
            #        port: healthz
            #      initialDelaySeconds: 10
            #      periodSeconds: 3
            #      timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /readyz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: helm-controller
      terminationGracePeriodSeconds: 600
      volumes:
      - emptyDir: {}
        name: temp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.17.2
    control-plane: controller
  name: notification-controller
  namespace: flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: notification-controller
    spec:
      containers:
      - args:
        - "--watch-all-namespaces=true"
        - "--log-level=debug"
        - "-log-json"
        - "--enable-leader-election"
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/fluxcd/notification-controller-arm64:v0.5.0
        imagePullPolicy: IfNotPresent
          #    livenessProbe:
          #      httpGet:
          #        path: /healthz
          #        port: healthz
          #      initialDelaySeconds: 10
          #      periodSeconds: 3
          #      timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /healthz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        name: manager
        ports:
        - containerPort: 9090
          name: http
        - containerPort: 9292
          name: http-webhook
        - containerPort: 8080
          name: http-prom
            #    - containerPort: 9440
            #      name: healthz
            #      protocol: TCP
            #    readinessProbe:
            #      httpGet:
            #        path: /readyz
            #        port: healthz
            #      initialDelaySeconds: 10
            #      periodSeconds: 3
            #      timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /readyz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: notification-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: temp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.17.2
    control-plane: controller
  name: source-controller
  namespace: flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: source-controller
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: source-controller
    spec:
      containers:
      - args:
        - "--events-addr=http://notification-controller/"
        - "--watch-all-namespaces=true"
        - "--log-level=debug"
        - "--log-json"
        - "--enable-leader-election"
        - "--storage-path=/data"
        - "--storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local."
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/fluxcd/source-controller-arm64:v0.5.6
        imagePullPolicy: IfNotPresent
          #  livenessProbe:
          #    httpGet:
          #      path: /healthz
          #      port: healthz
          #    initialDelaySeconds: 10
          #    periodSeconds: 3
          #    timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /healthz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        name: manager
        ports:
        - containerPort: 9090
          name: http
        - containerPort: 8080
          name: http-prom
            #  - containerPort: 9440
            #    name: healthz
            #  readinessProbe:
            #    httpGet:
            #      path: /
            #      port: http
            #    initialDelaySeconds: 10
            #    periodSeconds: 3
            #    timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 1337
      serviceAccountName: source-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: data
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.17.2
    control-plane: controller
  name: kustomize-controller
  namespace: flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kustomize-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: kustomize-controller
    spec:
      containers:
      - args:
        - "--events-addr=http://notification-controller/"
        - "--watch-all-namespaces=true"
        - "--log-level=debug"
        - "--log-json"
        - "--enable-leader-election"
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/fluxcd/kustomize-controller-arm64:v0.5.3
        imagePullPolicy: IfNotPresent
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: healthz
          #   initialDelaySeconds: 10
          #   periodSeconds: 3
          #   timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /healthz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        name: manager
        ports:
        - containerPort: 8080
          name: http-prom
            #    - containerPort: 9440
            #      name: healthz
            #      protocol: TCP
            #    readinessProbe:
            #      httpGet:
            #        path: /readyz
            #        port: healthz
            #      initialDelaySeconds: 10
            #      periodSeconds: 3
            #      timeoutSeconds: 60
            #        startupProbe:
            #          httpGet:
            #            path: /readyz
            #            port: healthz
            #          failureThreshold: 30
            #          periodSeconds: 10  
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true 
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 1337
      serviceAccountName: kustomize-controller
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir: {}
        name: temp

